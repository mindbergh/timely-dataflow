(function() {var implementors = {};
implementors['libc'] = [];implementors['timely'] = ["impl&lt;T&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> for <a class='struct' href='timely/progress/count_map/struct.CountMap.html' title='timely::progress::count_map::CountMap'>CountMap</a>&lt;T&gt;","impl&lt;T: <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> for <a class='struct' href='timely/progress/frontier/struct.Antichain.html' title='timely::progress::frontier::Antichain'>Antichain</a>&lt;T&gt;","impl&lt;T: <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> + <a class='trait' href='https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> for <a class='struct' href='timely/progress/frontier/struct.MutableAntichain.html' title='timely::progress::frontier::MutableAntichain'>MutableAntichain</a>&lt;T&gt;","impl&lt;T: <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> + <a class='trait' href='timely/progress/timestamp/trait.Timestamp.html' title='timely::progress::timestamp::Timestamp'>Timestamp</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> for <a class='struct' href='timely/progress/nested/pointstamp_counter/struct.PointstampCounter.html' title='timely::progress::nested::pointstamp_counter::PointstampCounter'>PointstampCounter</a>&lt;T&gt;","impl&lt;S, T: <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> for <a class='enum' href='timely/progress/nested/summary/enum.Summary.html' title='timely::progress::nested::summary::Summary'>Summary</a>&lt;S, T&gt;","impl&lt;TOuter: <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a>, TInner: <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> for <a class='struct' href='timely/progress/nested/product/struct.Product.html' title='timely::progress::nested::product::Product'>Product</a>&lt;TOuter, TInner&gt;","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> for <a class='struct' href='timely/progress/timestamp/struct.RootTimestamp.html' title='timely::progress::timestamp::RootTimestamp'>RootTimestamp</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> for <a class='struct' href='timely/progress/timestamp/struct.RootSummary.html' title='timely::progress::timestamp::RootSummary'>RootSummary</a>","impl&lt;T&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/default/trait.Default.html' title='core::default::Default'>Default</a> for <a class='struct' href='https://doc.rust-lang.org/nightly/collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
