(function() {var implementors = {};
implementors['timely_communication'] = ["impl&lt;T: <a class='trait' href='https://doc.rust-lang.org/nightly/core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + 'static&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Drop.html' title='core::ops::Drop'>Drop</a> for <a class='struct' href='timely_communication/initialize/struct.WorkerGuards.html' title='timely_communication::initialize::WorkerGuards'>WorkerGuards</a>&lt;T&gt;",];implementors['timely'] = ["impl&lt;T: <a class='trait' href='timely/progress/timestamp/trait.Timestamp.html' title='timely::progress::timestamp::Timestamp'>Timestamp</a> + <a class='trait' href='https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a>, D: <a class='trait' href='timely/trait.Data.html' title='timely::Data'>Data</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Drop.html' title='core::ops::Drop'>Drop</a> for <a class='struct' href='timely/dataflow/operators/input/struct.Handle.html' title='timely::dataflow::operators::input::Handle'>Handle</a>&lt;T, D&gt;","impl&lt;T: <a class='trait' href='timely/progress/timestamp/trait.Timestamp.html' title='timely::progress::timestamp::Timestamp'>Timestamp</a>, D: <a class='trait' href='timely/trait.Data.html' title='timely::Data'>Data</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Drop.html' title='core::ops::Drop'>Drop</a> for <a class='struct' href='timely/dataflow/operators/unordered_input/struct.UnorderedHandle.html' title='timely::dataflow::operators::unordered_input::UnorderedHandle'>UnorderedHandle</a>&lt;T, D&gt;","impl&lt;T: <a class='trait' href='timely/progress/timestamp/trait.Timestamp.html' title='timely::progress::timestamp::Timestamp'>Timestamp</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Drop.html' title='core::ops::Drop'>Drop</a> for <a class='struct' href='timely/dataflow/operators/struct.Capability.html' title='timely::dataflow::operators::Capability'>Capability</a>&lt;T&gt;","impl&lt;'a, T: <a class='trait' href='timely/progress/timestamp/trait.Timestamp.html' title='timely::progress::timestamp::Timestamp'>Timestamp</a>, D, P: <a class='trait' href='timely/trait.Push.html' title='timely::Push'>Push</a>&lt;<a class='primitive' href='https://doc.rust-lang.org/nightly/std/primitive.tuple.html'>(</a>T, <a class='enum' href='timely/dataflow/channels/message/enum.Content.html' title='timely::dataflow::channels::message::Content'>Content</a>&lt;D&gt;<a class='primitive' href='https://doc.rust-lang.org/nightly/std/primitive.tuple.html'>)</a>&gt; + 'a&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Drop.html' title='core::ops::Drop'>Drop</a> for <a class='struct' href='timely/dataflow/channels/pushers/buffer/struct.AutoflushSession.html' title='timely::dataflow::channels::pushers::buffer::AutoflushSession'>AutoflushSession</a>&lt;'a, T, D, P&gt; <span class='where'>where T: <a class='trait' href='https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> + 'a, D: 'a</span>","impl&lt;T&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Drop.html' title='core::ops::Drop'>Drop</a> for <a class='struct' href='https://doc.rust-lang.org/nightly/collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T: <a class='trait' href='timely/trait.Data.html' title='timely::Data'>Data</a>, S: <a class='trait' href='https://doc.rust-lang.org/nightly/std/io/trait.Write.html' title='std::io::Write'>Write</a>&gt; <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Drop.html' title='core::ops::Drop'>Drop</a> for <a class='struct' href='timely/logging/struct.EventStreamLogger.html' title='timely::logging::EventStreamLogger'>EventStreamLogger</a>&lt;T, S&gt;",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
